## Voron Design VORON2.4 250/300/350mm Monster8 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                        [mcu] section
## Thermistor types                 [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location        [safe_z_home] section
## Homing end position              [gcode_macro G32] section
## Z Endstop Switch  offset for Z0  [stepper_z] section
## Probe points                     [quad_gantry_level] section
## Min & Max gantry corner postions [quad_gantry_level] section
## PID tune                         [extruder] and [heater_bed] sections
## Fine tune E steps                [extruder] section
## Lines beginning with #! describe where to connect wires.
## Lines beginning with ##----- are placed around sections that need
##  to be customized for your build size or other hardware
[include printer_cfg/*.cfg]
[include macros/*.cfg]

[mcu]
## Obtain definition by "ls -l /dev/serial/by-id/"
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_380056000451373431373036-if00
##--------------------------------------------------------------------

## Uncomment below if you're using the Raspberry uart0 to communicate with Monster8
#restart_method: command
[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 15              # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
#! Connected to Driver0:X (B Motor)
step_pin: PC14
dir_pin: !PC13
enable_pin: !PC15               # Shared with stepper_y
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400     #set to 400 for 0.9 degree stepper
#! In X+ Position (X endstop)
endstop_pin: PA13               # Pullup on board
position_min: 0
##--------------------------------------------------------------------

position_endstop: 250
position_max: 250



homing_speed: 60                #Max 100
homing_retract_dist: 5
homing_positive_dir: true


[stepper_y]
#! Connected to Driver1:Y (A Motor)
step_pin: PE5
dir_pin: !PE4
enable_pin: !PC15               # Shared with stepper_x
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400     #set to 400 for 0.9 degree stepper
#! In Y+ Position (Y endstop)
endstop_pin: PC5               # Pullup on board
position_min: 0
##--------------------------------------------------------------------

position_endstop: 250
position_max: 250




homing_speed: 60  #Max 100
homing_retract_dist: 5
homing_positive_dir: true


#####################################################################
#   Z Stepper Settings
#####################################################################

#! In Driver2:Z2 Position (Z0 Stepper - Front Left)
[stepper_z]
step_pin: PE1
dir_pin: !PE0
enable_pin: !PE2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
#! In Z- Position (Z endstop)
endstop_pin:probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
## Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_max: 230
position_min: -15 
homing_speed: 8
second_homing_speed: 3
##--------------------------------------------------------------------

##      Uncomment below for 250mm build
position_max: 240

##      Uncomment below for 300mm build
#position_max: 290

##      Uncomment below for 350mm build
#position_max: 340

##--------------------------------------------------------------------
homing_retract_dist: 3


#! In Driver3:E0 Position (Z1 Stepper - Rear Left)
[stepper_z1]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16


#! In Driver4:E1 Position (Z2 Stepper - Rear Right)
[stepper_z2]
step_pin: PD6
dir_pin: !PD5
enable_pin: !PD7
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16



## In Driver5:E2 Position (Z3 Stepper - Front Right)
[stepper_z3]
step_pin: PD2
dir_pin: PD1
enable_pin: !PD3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16





#####################################################################
#   Probe
#####################################################################

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
#! FAN0 Connector (Hotend Fan)
pin: PA2
max_power: 1.0
#kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
## If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
#! FAN1 Connector (Print Cooling Fan)
pin: PA1
#max_power: 1.0
#kick_start_time: 0.5
## Depending on your fan, you may need to increase this value
## if your fan will not start. Can change cycle_time (increase)
## if your fan is not able to slow down effectively
off_below: 0.10

[controller_fan controller_fan]
#! In HE1 Positon (Controller fan)
pin: PB0
kick_start_time: 0.5
heater: heater_bed

# Uncomment this for a GCode controllable fan
#[heater_fan exhaust_fan]
#! FAN2 Connector (Exhaust fan)
#pin: PA0
#max_power: 1.0
#shutdown_speed: 0.0
##kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

# Uncomment this for an automatic chamber temperature fan
#[temperature_fan chamber]
##! FAN2 Connector (Exhaust fan)
#pin: PA0
#max_power: 1.0
#shutdown_speed: 0.0
## Validate the following thermistor type to make sure it is correct
## See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
#sensor_type: Generic 3950
##! In TH1 Position (Chamber Temperature)
#sensor_pin: PC2
#control: watermark
#min_temp: 0
#max_temp: 70
#target_temp: 35.0
#gcode_id: C

#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight ]
#! In HE2 Position (Chamber Lighting)
#pin: PA3
#pwm: true
#shutdown_value: 0
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
## XY Location of the Z Endstop Switch
## Update -10,-10 to the XY coordinates of your endstop pin
## (such as 157,305) after going through Z Endstop Pin
## Location Definition step.
home_xy_position:125,125
speed:100
z_hop:10

[quad_gantry_level]
## Use QUAD_GANTRY_LEVEL to level a gantry.
## Min & Max gantry corners - measure from nozzle at MIN (0,0) and
## MAX (250, 250), (300,300), or (350,350) depending on your printer size
## to respective belt positions

#--------------------------------------------------------------------
##      Gantry Corners for 250mm Build
##      Uncomment for 250mm build
gantry_corners:
       -60,-10
       310, 320
##      Probe points
points:
       50,25
       50,175
       200,175
       200,25



#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#   Displays
#####################################################################

#--------------------------------------------------------------------

[display]
#! In EXP1/EXP2 (mini12864 LCD Display)
lcd_type: uc1701
cs_pin: PE11
a0_pin: PD10
rst_pin: PD9
encoder_pins: ^PE8,^PE9
click_pin: ^!PE10
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel mks_mini12864_v3]
# To control Neopixel RGB in mini12864 display
pin: PD8
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

# Set RGB values on boot up for each Neopixel.
# Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=mks_mini12864_v3 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=mks_mini12864_v3 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=mks_mini12864_v3 RED=1 GREEN=0 BLUE=0 INDEX=3

[output_pin beeper]
pin: PB2

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    G0 X125 Y125 Z30 F3600
    
    #--------------------------------------------------------------------

[gcode_macro M300]
gcode:
    # Use a 200ms duration if P is omitted.
    {% set P = params.P|default(200)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=1
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro PRINT_START]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    
    G28
    # <insert your routines here>
    M190 S{bedtemp}                                                              ; set & wait for bed temp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   ; wait for chamber temp
    # <insert your routines here>
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp
    # <insert your routines here>
    CLEAN_NOZZLE
    G28 Z     
# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+5}
                                                                   ; final z homing
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh Mesh default]
#*# version = 1
#*# points =
#*# 	0.062500, 0.007500, -0.020000, -0.032500, -0.032500, -0.022500, 0.027500
#*# 	0.067500, 0.007500, -0.005000, -0.027500, -0.020000, -0.002500, 0.062500
#*# 	0.077500, 0.030000, 0.015000, 0.005000, 0.000000, 0.035000, 0.107500
#*# 	0.065000, 0.045000, 0.042500, -0.012500, -0.002500, 0.035000, 0.095000
#*# 	0.065000, 0.017500, 0.015000, -0.007500, 0.000000, 0.025000, 0.092500
#*# 	0.035000, 0.000000, -0.022500, -0.035000, -0.012500, 0.010000, 0.065000
#*# 	0.035000, -0.007500, -0.035000, -0.047500, -0.037500, -0.032500, 0.015000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 210.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 50.357
#*# pid_ki = 1.986
#*# pid_kd = 319.135
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.050000, -0.005000, -0.032500, -0.052500, -0.050000, -0.042500, 0.007500
#*# 	0.050000, 0.000000, -0.015000, -0.030000, -0.022500, -0.007500, 0.057500
#*# 	0.065000, 0.027500, 0.015000, 0.000000, 0.007500, 0.035000, 0.097500
#*# 	0.052500, 0.025000, 0.020000, -0.007500, 0.015000, 0.045000, 0.110000
#*# 	0.050000, 0.025000, 0.012500, 0.005000, 0.025000, 0.047500, 0.115000
#*# 	0.027500, 0.000000, -0.020000, -0.022500, 0.005000, 0.035000, 0.090000
#*# 	0.030000, -0.007500, -0.030000, -0.035000, -0.025000, -0.005000, 0.057500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 210.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.762
#*# pid_ki = 2.533
#*# pid_kd = 148.266
#*#
#*# [bed_mesh heatbed]
#*# version = 1
#*# points =
#*# 	0.050000, -0.005000, -0.032500, -0.052500, -0.050000, -0.042500, 0.007500
#*# 	0.050000, 0.000000, -0.015000, -0.030000, -0.022500, -0.007500, 0.057500
#*# 	0.065000, 0.027500, 0.015000, 0.000000, 0.007500, 0.035000, 0.097500
#*# 	0.052500, 0.025000, 0.020000, -0.007500, 0.015000, 0.045000, 0.110000
#*# 	0.050000, 0.025000, 0.012500, 0.005000, 0.025000, 0.047500, 0.115000
#*# 	0.027500, 0.000000, -0.020000, -0.022500, 0.005000, 0.035000, 0.090000
#*# 	0.030000, -0.007500, -0.030000, -0.035000, -0.025000, -0.005000, 0.057500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 210.0
